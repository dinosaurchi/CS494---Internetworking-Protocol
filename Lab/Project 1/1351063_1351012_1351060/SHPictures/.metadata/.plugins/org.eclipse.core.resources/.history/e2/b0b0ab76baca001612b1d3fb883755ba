package Packet;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

import javax.imageio.ImageIO;

import Entity.MyImageInfo;

public class UploadPacket extends Packet implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1910548457003739522L;
	public static final String PACKET_TYPE = "UPLOAD";
	
	private MyImageInfo uploadImageInfo = null;
	transient private BufferedImage image = null;
	
	private void writeObject(ObjectOutputStream out) throws IOException {
        out.defaultWriteObject();
        ImageIO.write(image, uploadImageInfo.getType(), out); // png is lossless
    }

    private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {
        in.defaultReadObject();
        final int imageCount = in.readInt();
        images = new ArrayList<BufferedImage>(imageCount);
        for (int i=0; i<imageCount; i++) {
            images.add(ImageIO.read(in));
        }
    }
	
	public UploadPacket() {
		super.packetType = PACKET_TYPE;
	}
	
	public MyImageInfo getUploadImageInfo() {
		// TODO Auto-generated method stub
		return uploadImageInfo;
	}
	
	public void setUploadImage(BufferedImage image) {
		this.image = image;
	}
	
	public void setUploadImage(String currentImageLink) {
		try {
			this.image = ImageIO.read(new File(currentImageLink));
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	public void setUploadImageInfo(MyImageInfo uploadImageInfo) {
		this.uploadImageInfo = uploadImageInfo;
	}

	public BufferedImage getUploadImage() {
		return image;
	}

}
